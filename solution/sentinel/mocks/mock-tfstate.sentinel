import "strings"
import "types"

outputs = {}

_modules = {
	"root": {
		"data": {},
		"path": [],
		"resources": {
			"random_pet": {
				"petname": {
					0: {
						"attr": {
							"id":        "miserably-blindly-musical-panther",
							"keepers":   null,
							"length":    4,
							"prefix":    null,
							"separator": "-",
						},
						"depends_on": [],
						"id":         "miserably-blindly-musical-panther",
						"tainted":    false,
					},
				},
			},
		},
	},
}

module_paths = [
	[],
]

terraform_version = "0.13.4"

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
